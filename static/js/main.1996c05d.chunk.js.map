{"version":3,"sources":["faculty_scraper.js","results.js","index.js"],"names":["FacultySearchBox","props","state","url","loading","handleChange","bind","handleSubmit","sendRequest","event","this","setState","target","value","urlString","String","replace","validateUrl","document","getElementById","setCustomValidity","preventDefault","console","log","endsWith","test","startsWith","requestOptions","method","mode","headers","body","JSON","stringify","fetch","then","response","ok","json","Error","data","length","history","push","pathname","setTimeout","catch","_error","title","className","onSubmit","autoFocus","type","id","onChange","placeholder","React","Component","Results","location","map","item","href","ReactDOM","render","exact","path","component"],"mappings":"wSA6GeA,E,kDAvGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,IAAK,GACLC,SAAS,GAGb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBATJ,E,yDAYNG,GACTC,KAAKC,SAAS,CAAER,IAAKM,EAAMG,OAAOC,QAClC,IAAIC,EAAYC,OAAON,EAAMG,OAAOC,OAAOG,QAAQ,MAAO,IACtDN,KAAKO,YAAYH,GACjBI,SAASC,eAAe,SAASC,kBAAkB,gHAGvDF,SAASC,eAAe,SAASC,kBAAkB,M,mCAG1CX,GAIT,GAHAA,EAAMY,kBAGFX,KAAKR,MAAME,QAAf,CAIA,IAAIU,EAAYC,OAAOL,KAAKR,MAAMC,KAAKa,QAAQ,MAAO,IAClDN,KAAKO,YAAYH,GACjBQ,QAAQC,IAAI,iBAGhBb,KAAKC,SAAS,CAACP,SAAS,IAGxBM,KAAKF,kB,kCAGGM,GACR,OAAQA,EAAUU,SAAS,UAAY,mBAAmBC,KAAKX,KACzDA,EAAUY,WAAW,iBAAmBZ,EAAUY,WAAW,kB,oCAGxD,IAAD,OAEJC,EAAiB,CACnBC,OAAQ,OACRC,KAAM,OACNC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAE9B,IAAKO,KAAKR,MAAMC,OAG3C+B,MAAM,+CAAgDP,GACjDQ,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,oBAEvBJ,MAAK,SAAAK,GACEA,EAAI,QACJ,EAAK7B,SAAS,CAAEP,SAAS,EAAOD,IAAK,KAGV,GAAvBqC,EAAI,KAASC,QACbvB,SAASC,eAAe,SAASC,kBAAkB,iGAGvD,EAAKnB,MAAMyC,QAAQC,KAAK,CAAEC,SAAU,WAAYJ,KAAMA,EAAI,QAE1DK,WAAW,EAAKrC,YAAa,QAGpCsC,OAAM,SAACC,GACJ,EAAKpC,SAAS,CAAEP,SAAS,IACzBc,SAASC,eAAe,SAASC,kBAAkB,uF,+BAS3D,MAJsB,mBAAlBF,SAAS8B,QACT9B,SAAS8B,MAAQ,mBAGd,CACH,oBAAIC,UAAU,QAAd,6BACA,sBAAMC,SAAUxC,KAAKH,aAAc0C,UAAU,OAA7C,SACI,wBAAOA,UAAU,SAAjB,UACI,uBAAOE,WAAS,EAACC,KAAK,OAAOC,GAAG,QAAQxC,MAAOH,KAAKR,MAAMC,IAAKmD,SAAU5C,KAAKL,aAAckD,YAAY,yDAAyDN,UAAU,cAC3K,wBAAQG,KAAK,SAASH,UAAU,eAAhC,SAEQvC,KAAKR,MAAME,QAAU,cAAC,IAAD,IAAW,cAAC,IAAD,gB,GA/F7BoD,IAAMC,WCsBtBC,G,6KAvBD,IACElB,EAAS9B,KAAKT,MAAM0D,SAApBnB,KAMR,MAJsB,WAAlBtB,SAAS8B,QACT9B,SAAS8B,MAAQ,WAGT,MAARR,EAEI,oBAAIS,UAAU,QAAd,wCAIA,CACJ,oBAAIA,UAAU,YAAd,6BACA,oBAAIA,UAAU,YACd,qBAAKA,UAAU,OAAf,SACKT,EAAKoB,KAAI,SAAAC,GAAI,OAAK,oBAAIZ,UAAU,WAAd,SAAyB,mBAAGa,KAAMD,EAAMjD,OAAO,SAASqC,UAAU,MAAzC,SAAgDY,gB,GAlBtFL,IAAMC,Y,eCI5BM,IAASC,OACL,cAAC,IAAD,UACI,gCACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnE,IACjC,cAAC,IAAD,CAAOkE,KAAK,WAAWC,UAAWT,SAG1CxC,SAASC,eAAe,W","file":"static/js/main.1996c05d.chunk.js","sourcesContent":["import React from 'react';\nimport './faculty_scraper.css';\nimport { FaSearch } from 'react-icons/fa';\nimport { Puff } from '@agney/react-loading';\n\nclass FacultySearchBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: '',\n            loading: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.sendRequest = this.sendRequest.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ url: event.target.value });\n        var urlString = String(event.target.value).replace(/\\/$/, \"\")\n        if (this.validateUrl(urlString)) {\n            document.getElementById(\"input\").setCustomValidity(\"Invalid URL: Make sure you are providing a valid university URL (starts with http(s):// and ends with .edu).\");\n            return;\n        }\n        document.getElementById(\"input\").setCustomValidity(\"\");\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        // Do nothing if already loading something.\n        if (this.state.loading)\n            return;\n\n        // Want to accept only URls that end in .edu ignoring trailing /s.\n        var urlString = String(this.state.url).replace(/\\/$/, \"\")\n        if (this.validateUrl(urlString)) {\n            console.log(\"Invalid URL.\");\n            return;\n        }\n        this.setState({loading: true});\n\n        // Send the request and start polling.\n        this.sendRequest()\n    }\n\n    validateUrl(urlString) {\n        return !urlString.endsWith('.edu') || !/^[a-zA-Z:\\/\\.]+$/.test(urlString) ||\n            (!urlString.startsWith('http://www.') && !urlString.startsWith('https://www.'));\n    }\n\n    sendRequest() {\n        // Send request to flask with the URL.\n        const requestOptions = {\n            method: 'POST',\n            mode: \"cors\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ url: this.state.url })\n        };\n\n        fetch('https://facultyscraper-heroku.herokuapp.com/', requestOptions)\n            .then(response => {\n                if (response.ok)\n                    return response.json();\n                else\n                    throw new Error(\"Bad response!\");\n            })\n            .then(data => {\n                if (data[\"result\"]) {\n                    this.setState({ loading: false, url: \"\" });\n\n                    // Don't go to results page if nothing to display.\n                    if (data[\"urls\"].length == 0) {\n                        document.getElementById(\"input\").setCustomValidity(\"Failed to get results! Check URL and make sure it is correct. Maybe try with/without the www.\");\n                    }\n\n                    this.props.history.push({ pathname: \"/results\", data: data[\"urls\"] });\n                } else {\n                    setTimeout(this.sendRequest, 10000);\n                }\n            })\n            .catch((_error) => {\n                this.setState({ loading: false });\n                document.getElementById(\"input\").setCustomValidity(\"Invalid URL! Try another variation of this URL and make sure it is accessible!\");\n            });\n    }\n\n    render() {\n        if (document.title != \"Faculty Scraper\") {\n            document.title = \"Faculty Scraper\";\n        }\n\n        return [\n            <h1 className=\"title\">Faculty Scraper</h1>,\n            <form onSubmit={this.handleSubmit} className=\"wrap\">\n                <label className=\"scrape\">\n                    <input autoFocus type=\"text\" id=\"input\" value={this.state.url} onChange={this.handleChange} placeholder=\"Input a university URL (e.g. https://www.illinois.edu)\" className=\"scrapeBar\" />\n                    <button type=\"submit\" className=\"scrapeButton\">\n                        {\n                            this.state.loading ? <Puff /> : <FaSearch />\n                        }\n                    </button>\n                </label>\n            </form>\n        ];\n    }\n}\n\nexport default FacultySearchBox;\n","import React from \"react\";\nimport './results.css';\n\nclass Results extends React.Component {\n    render() {\n        const { data } = this.props.location;\n\n        if (document.title != \"Results\") {\n            document.title = \"Results\";\n        }\n\n        if (data == null) {\n            return (\n                <h1 className=\"error\">Error, no results present!</h1>\n            );\n        }\n\n        return ([\n            <h1 className=\"listTitle\">Faculty Scraper</h1>,\n            <hr className=\"listBar\"></hr>,\n            <div className=\"list\">\n                {data.map(item => (<li className=\"listItem\"><a href={item} target=\"_blank\" className=\"url\">{item}</a></li>))}\n            </div>\n        ]);\n    }\n}\n\nexport default Results;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport FacultySearchBox from './faculty_scraper.js';\nimport Results from './results.js';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <div>\n            <Route exact path=\"/\" component={FacultySearchBox} />\n            <Route path=\"/results\" component={Results} />\n        </div>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}